import LOGGER:ObjectDBLogger;
import UTILITIES:TextUtils;
import APIOBJECT:XMLRowset;

class RowsetDBLogger extends LOGGER:ObjectDBLogger;
   method RowsetDBLogger(&pSrc As string, &pGrp As string, &pSubGrp As string, &pMarkerStr As string);
   
   method logRs(&rs As Rowset);
   method logRecord(&rec As Record);
private
   instance UTILITIES:TextUtils &txtUtils;
end-class;

method RowsetDBLogger
   /+ &pSrc as String, +/
   /+ &pGrp as String, +/
   /+ &pSubGrp as String, +/
   /+ &pMarkerStr as String +/
   %Super = create LOGGER:ObjectDBLogger(&pSrc, &pGrp, &pSubGrp, &pMarkerStr);
end-method;

method logRs
   /+ &rs as Rowset +/
   
   If &txtUtils = Null Then
      &txtUtils = create UTILITIES:TextUtils();
   End-If;
   
   %This.writeLog(&txtUtils.rowsetToString(&rs));
end-method;

method logRecord
   /+ &rec as Record +/
   
   If &txtUtils = Null Then
      &txtUtils = create UTILITIES:TextUtils();
   End-If;
   
   %This.writeLog(&txtUtils.recordToString(&rec, ""));
end-method;

method logRecord
   /+ &rec as Record +/
   
   If &txtUtils = Null Then
      &txtUtils = create UTILITIES:TextUtils();
   End-If;
   
   %This.writeLog(&txtUtils.recordToString(&rec, ""));
end-method;

method logRSAsXML
   /+ &rs as Rowset +/
   Local APIOBJECT:XMLRowset &xmlRs = create APIOBJECT:XMLRowset();
   %This.logXml(&xmlRs.rsToXML(&rs, True, False), True); /* defined in LOGGER:ObjectDBLogger */
   
end-method;